容器到容器之间的网络通信
抽象的pod到pod之间的通信
pod到service之间的通信
集群外部与内部组件之间的通信

1.容器到容器之间的网络通信
在同一个pod内的容器，共享同一个网络命名空间，共享同一个Linux协议栈。

2.pod之间的通信
每一个pod都有一个真实的全局IP地址，同一个node内的不同pod之间可以直接采用对方pod的IP地址通信。而且不需要其他的发现机制，例如dns、consul、etcd。

同一个node内的pod之间的通信
pod1和pod2都是通过veth连接在同一个docker0网桥上的，他们的ip地址都是从docker0的网段上动态获取的，和网桥本身的ip3是同一个网段的。

不同node上的pod之间的通信
pod的地址和docker0不在一个网段内，我们知道docker0网段与宿主机网卡是两个完全不同的ip网段，并且不同node之间的通信只能通过宿主机的物理网卡进行，因此要实现位于不同node上的pod容器之间的通信，就必须想办法通过主机的这个ip地址来进行寻址和通信。
kubernetes会记录所有正在运行pod的ip分配信息，并将这些信息保存在etcd中(作为service的endpoint)这些私有的ip信息对于pod到pod的通信也是十分重要的，因为我们的网络模型要求pod到pod使用私有ip进行通信。
1.在整个kubernetes集群中对pod的ip分配进行规划，不能有冲突
2.找到一种方法，将pod的ip和所在node的ip关联起来，通过这个关联让pod可以互相访问。

