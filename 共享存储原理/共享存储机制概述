PersistentVolume(PV)是对底层网络共享存储的抽象，将共享存储定义为一种资源，比如节点(node)也是一种容器应用可以消费的资源。PV由管理员进行创建和配置，他与共享存储的具体实现直接相关，例如glusterfs、iscsi、rbd。通过插件式的机制完成与共享存储的对接，以供应用访问和使用。

PersistenVolumeClaim(PVC)则是用户对于存储资源的一个申请。就像pod消费node的资源一样，pvc会消费pv的资源。pvc可以申请特定的存储空间和访问方式。

使用pvc申请到一定的存储空间仍然不足以满足应用对于存储设备的各种需求。通常应用程序都会对存储设备的特性和性能有不同的需求，包括读写速度、并发性能、数据冗余等更高的要求，从1.4版本之后引入了一个新的资源对象storageclass，用于标记存储资源的特性和性能。在1.6版本时，storageclass和动态资源供应的机制得到了完善，实现了存储卷的按需创建，在共享存储的自动化管理进程中实现了重要的一步。

通过storageclass的定义管理员可以将存储资源定义为某种级别，正如存储设备对于自身的配置描述，例如快速存储，慢速存储，有数据冗余，无数据冗余等。用户根据storageclass的描述就能直观的得知各种存储资源的特性，就可以根据应用对存储资源的需求去申请存储资源了。

